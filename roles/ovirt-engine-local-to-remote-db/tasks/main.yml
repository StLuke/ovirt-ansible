---
- name: set engine variables
  set_fact:
    engine_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['all'] }}"
  when: ovirt_type == "engine"

- name: set db variables
  set_fact:
    remote_db_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['all'] }}"
  when: ovirt_type == "remote_db"

# first dump databases on engine and get connection variables
- name: dump databases
  include_role:
    name: ovirt-engine-db-dump
  vars:
    ovirt_engine_db_dump_dwh: "{{ ovirt_engine_dwh_to_remote_db }}"
    ovirt_engine_db_dump_start_services: False
    ovirt_engine_db_dump_local_dir: "{{ playbook_dir }}/engine_dump"
  when:
    - ovirt_type == "engine"
    - ovirt_engine_reset == False

- name: get engine variables from file
  include_vars:
    file: "{{ playbook_dir }}/engine_dump/engine_variables.json"
    name: ovirt_engine_db_dump_engine_db
  when:
    - ovirt_engine_to_remote_db == True
    - ovirt_engine_reset == False

- name: get DWH variables from file
  include_vars:
    file: "{{ playbook_dir }}/engine_dump/dwh_variables.json"
    name: ovirt_engine_db_dump_dwh_db
  when:
    - ovirt_engine_dwh_to_remote_db == True
    - ovirt_engine_reset == False

# create databases on remote server and import data
- name: create databases and import data
  include_role:
    name: ovirt-engine-remote-db
  vars:
    ovirt_engine_version: "{{ ovirt_engine_version }}"
    ovirt_engine_remote_db_port: "{{ ovirt_engine_db_dump_engine_db['ENGINE_DB_PORT'] }}"
    ovirt_engine_db_name: "{{ ovirt_engine_db_dump_engine_db['ENGINE_DB_DATABASE'] }}"
    ovirt_engine_db_user: "{{ ovirt_engine_db_dump_engine_db['ENGINE_DB_USER'] }}"
    ovirt_engine_db_password: "{{ ovirt_engine_db_dump_engine_db['ENGINE_DB_PASSWORD'] }}"
    ovirt_engine_remote_db: "{{ ovirt_engine_to_remote_db }}"
    ovirt_engine_dwh_remote_db: "{{ ovirt_engine_dwh_to_remote_db }}"
    ovirt_engine_dwh_db_name: "{{ ovirt_engine_db_dump_dwh_db['DWH_DB_DATABASE'] }}"
    ovirt_engine_dwh_db_user: "{{ ovirt_engine_db_dump_dwh_db['DWH_DB_USER'] }}"
    ovirt_engine_dwh_db_password: "{{ ovirt_engine_db_dump_dwh_db['DWH_DB_PASSWORD'] }}"
    ovirt_engine_remote_db_force: True
    ovirt_engine_remote_db_dump: "{{ ovirt_engine_db_dump_local_dir }}/engine.sql"
    ovirt_engine_remote_db_dwh_dump: "{{ ovirt_engine_db_dump_local_dir }}/dwh.sql"
    ovirt_engine_remote_db_access:
      -
        type: host
        address: "{{ engine_ip }}/32"
        method: md5
  when:
    - ovirt_type == "remote_db"
    - ovirt_engine_reset == False

# set engine from local to remote db
- include: set-engine.yml
  when:
    - ovirt_type == "engine"
    - ovirt_engine_reset == False

# check engine running
- name: check if ovirt-engine running (health page)
  uri:
    url: "http://{{ ansible_fqdn }}/ovirt-engine/services/health"
    status_code: 200
  register: ovirt_engine_status
  retries: 2
  delay: 5
  until: ovirt_engine_status|success
  ignore_errors: True
  when:
    - ovirt_type == "engine"
    - ovirt_engine_reset == False

# engine is not running reset engine back to local
- name: engine not running - set back to local
  set_fact:
    ovirt_engine_remove_db: False
    ovirt_engine_reset: True
  when:
    - ovirt_type == "engine"
    - ovirt_engine_reset == False
    - ovirt_engine_status|failed

- name: engine is running - remove database
  set_fact:
    ovirt_engine_remove_db: True
  when:
    - ovirt_type == "engine"
    - ovirt_engine_reset == False
    - ovirt_engine_status|success
    - ovirt_engine_dont_remove_db == False

# reset engine back to local db
- include: reset-engine.yml
  when:
    - ovirt_type == "engine"
    - ovirt_engine_reset == True

# clean
- name: remove dump files from local
  local_action:
    file path={{ playbook_dir }}/engine_dump state=absent
  when:
    - ovirt_engine_reset == False

# drop databases
- include: remove-local-db.yml
  when:
    - ovirt_type == "engine"
    - ovirt_engine_remove_db == True
