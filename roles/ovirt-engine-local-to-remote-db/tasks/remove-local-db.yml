---
# to be sure services are stopped
- name: stop necessary service
  service:
    name: "{{ item }}"
    state: stopped
  with_items:
    - ovirt-engine-dwhd
    - ovirt-engine
    - ovirt-fence-kdump-listener

# no connections left in db
- name: restart postgres
  service:
    name: postgresql
    state: restarted

- name: remove engine/dwh databases - get postgres path
  become: yes
  become_user: postgres
  shell: echo $HOME
  register: pgpath
  tags:
    - skip_ansible_lint

# first backup databases
- name: creating directory backup in postgres home
  become: yes
  become_user: postgres
  file:
    path: "{{ pgpath.stdout }}/engine-backup"
    state: directory

- name: get dump of engine database
  become: yes
  become_user: postgres
  shell: pg_dump -F c {{ ovirt_engine_db_dump_engine_db['ENGINE_DB_DATABASE'] }} -f {{ pgpath.stdout }}/engine-backup/engine.sql
  tags:
    - skip_ansible_lint

- name: get dump of dwh database
  become: yes
  become_user: postgres
  shell: pg_dump -F c {{ ovirt_engine_db_dump_dwh_db['DWH_DB_DATABASE'] }} -f {{ pgpath.stdout }}/engine-backup/dwh.sql
  when:
    - ovirt_engine_dwh_to_remote_db == True
  tags:
    - skip_ansible_lint

# drop databases
- name: creating directory ansible-sql for sql scripts
  file:
    path: "{{ pgpath.stdout }}/ansible-sql"
    state: directory

- name: copy drop engine SQL scripts
  template:
    src: "{{item}}.j2"
    dest: "{{ pgpath.stdout }}/ansible-sql/{{item}}"
    mode: 0644
    owner: postgres
    group: postgres
  with_items:
    - "ovirt-engine-db-drop.sql"
    - "ovirt-engine-db-user-drop.sql"
  when:
    - ovirt_engine_remove_db == True

- name: copy drop dwh SQL scripts
  template:
    src: "{{item}}.j2"
    dest: "{{ pgpath.stdout }}/ansible-sql/{{item}}"
    mode: 0644
    owner: postgres
    group: postgres
  with_items:
    - "ovirt-engine-dwh-db-drop.sql"
    - "ovirt-engine-dwh-db-user-drop.sql"
  when:
    - ovirt_engine_dwh_to_remote_db == True

- name: drop engine DB and user
  become_user: postgres
  become: yes
  # ON_ERROR_STOP=1 - command returns non-zero value, otherwise is always 0 with -f flag
  command: psql -p {{ ovirt_engine_db_dump_engine_db['ENGINE_DB_PORT'] }} -a -v ON_ERROR_STOP=1 -f {{ pgpath.stdout }}/ansible-sql/'{{item}}'
  with_items:
    - "ovirt-engine-db-drop.sql"
    - "ovirt-engine-db-user-drop.sql"
  when:
    - ovirt_engine_remove_db == True

- name: drop DWH DB and user
  become_user: postgres
  become: yes
  command: psql -p {{ ovirt_engine_db_dump_engine_db['ENGINE_DB_PORT'] }} -a -v ON_ERROR_STOP=1 -f {{ pgpath.stdout }}/ansible-sql/'{{item}}'
  with_items:
    - "ovirt-engine-dwh-db-drop.sql"
    - "ovirt-engine-dwh-db-user-drop.sql"
  when:
    - ovirt_engine_dwh_to_remote_db == True

# restart needed services
- name: start engine and dwh service
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - ovirt-engine
    - ovirt-engine-dwhd
    - ovirt-fence-kdump-listener
