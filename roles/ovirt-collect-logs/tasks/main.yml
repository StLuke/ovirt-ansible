---
- name: Include correct variables based on system
  include_vars: "{{ ovirt_collect_logs_from_system }}.yml"

- name: Ensure required archive tools
  yum:
    name: "{{ item }}"
    state: "present"
  with_items:
    - gzip
    - tar

# Prepare place to store data

- name: Clean temporary directory and previous archive
  file:
    path: "{{ item }}"
    state: "absent"
  with_items:
    - "{{ ovirt_collect_logs_tmp_dir }}"
    - "{{ ovirt_collect_logs_archive }}"

- name: Create temporary directory
  file:
    path: "{{ ovirt_collect_logs_tmp_dir }}"
    state: "directory"
    mode: "0777"

# Collect common stuff
- name: Dump system information using shell commands
  shell: "{{ item.value }} &> {{ ovirt_collect_logs_tmp_dir }}/{{ item.key }}.txt"
  with_dict: "{{ ovirt_collect_logs_shell_commands }}"
  ignore_errors: true
  tags:
    - skip_ansible_lint # check for shell module is not working correctly in Lint

- name: Check if /var/log/messages exists else we have to use journalctl
  stat: path=/var/log/messages
  register: message_file

- name: Copy journalctl output if /var/log/messages is missing
  shell: journalctl > "/var/log/messages"
  when: not message_file.stat.exists

- name: Link common logs
  file:
    src: "{{ item.src }}"
    dest: "{{ ovirt_collect_logs_tmp_dir }}/{{ item.dest }}"
    state: link
  with_items:
    - { src: "/var/log/messages", dest: "messages" }

# Collect system specific stuff

- include: "{{ ovirt_collect_logs_from_system }}.yml"

# Fetch stuff to local system
- name: Archive logs
  shell: "tar {{ ovirt_collect_logs_tar_optional_params}}
            -hczf {{ ovirt_collect_logs_archive }}
            {{ ovirt_collect_logs_tmp_dir }}"
  ignore_errors: true
  tags:
    - skip_ansible_lint # achive module has insufficient functionality

- name: Fetch logs
  fetch:
    src: "{{ ovirt_collect_logs_archive }}"
    dest: "logs/{{ ovirt_collect_logs_from_system }}-{{ ansible_hostname }}/ovirt-engine-logs.tar.gz"
    flat: yes

- name: Remove /var/log/messages if it was not there before
  file:
    path: /var/log/messages
    state: absent
  when: not message_file.stat.exists
